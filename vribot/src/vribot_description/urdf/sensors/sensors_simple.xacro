<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

  <xacro:property name="link_name" value="camera_link" />
  <xacro:property name="camera_name" value="camera" />
  <xacro:property name="frame_name" value="camera_rgb_frame" />

  <gazebo reference="${link_name}">
  <sensor name="${link_name}" type="depth">
    <update_rate>30</update_rate>
    <camera>
      <horizontal_fov>1.047198</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>4</far>
      </clip>
    </camera>
    <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1.0</updateRate>
      <cameraName></cameraName>
      <imageTopicName>${camera_name}/rgb/image_raw</imageTopicName>
      <cameraInfoTopicName>${camera_name}/rgb/camera_info</cameraInfoTopicName>
      <depthImageTopicName>${camera_name}/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>${camera_name}/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>${camera_name}/depth/points</pointCloudTopicName>
      <frameName>${frame_name}</frameName>
      <pointCloudCutoff>0.5</pointCloudCutoff>
      <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
  </gazebo>

  <!-- BEGIN kinect  -->
    <joint name="top_plate_to_camera_link_joint" type="fixed">
      <origin rpy="0 0.226893 0" xyz="0.15 0 0.62"/>
      <parent link="top_plate"/>
      <child link="camera_link"/>
    </joint>

    <!-- <joint name="camera_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz=" 0.2 0 0" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="camera_link"/>
    </joint> --> -->

    <link name="camera_link">
      <inertial>
        <mass value="0.01" />
        <origin xyz="0 0 0"/>
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
          iyy="0.001" iyz="0.0"
          izz="0.001" />
      </inertial>

      <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 1.57079632679" />
        <geometry>
          <mesh filename="package://vribot_description/meshes/sensors/kinect.dae"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
          <box size="0.0730 0.2760 0.0720"/>
        </geometry>
      </collision>

    </link>

    <joint name="camera_rgb_joint" type="fixed">
      <axis xyz="0 1 0" />
      <origin xyz="0 0 0" rpy="-1.57079632679 0 -1.57079632679" />
      <parent link="camera_link" />
      <child link="camera_rgb_frame" />
    </joint>

    <link name="camera_rgb_frame">
      <inertial>
        <mass value="0.001" />
        <origin xyz="0 0 0" rpy="0 0 0" />
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
          iyy="0.0001" iyz="0.0"
          izz="0.0001" />
      </inertial>
    </link>
  <!-- END kinect  -->

  <!-- BEGIN YDLIDAR -->

  <!-- base_link -->
	<gazebo reference="base_footprint">
		<material>Gazebo/Blue</material>
	</gazebo>

  <!-- hokuyo -->
  <!-- <gazebo reference="laser_frame">
    <sensor type="gpu_ray" name="head_ydlidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.26573</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.08</min>
          <max>16.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>

          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser_frame</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

  <gazebo reference="laser_frame">
    <sensor type="gpu_ray" name="head_ydlidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>7</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.30</min>
          <max>16.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.015</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <joint name="ydlidar_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz=" 0.0 0 0.73" rpy="0 0 0"/>
    <parent link="top_plate"/>
    <child link="base_footprint"/>
  </joint>

  <link
    name="base_footprint">
    <inertial>
      <origin
        xyz="-0.00029774 0.0066667 0.00013047"
        rpy="0 0 0" />
      <mass
        value="0.15717" />
      <inertia
        ixx="6.7885E-05"
        ixy="-1.3987E-07"
        ixz="-8.1554E-07"
        iyy="0.00013173"
        iyz="-9.0932E-08"
        izz="7.1972E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://vribot_description/meshes/sensors/ydlidar.dae" />
      </geometry>
      <material
        name="ydlidarBlue">
        <color
          rgba="0.64706 0.61961 0.58824 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://vribot_description/meshes/sensors/ydlidar.dae" />
      </geometry>
    </collision>
  </link>
  <link
    name="laser_frame">
    <inertial>
      <origin
        xyz="-0.00036659 0.00064155 -0.00027052"
        rpy="0 0 0" />
      <mass
        value="0.25482" />
      <inertia
        ixx="8.9194E-05"
        ixy="1.8116E-07"
        ixz="3.6435E-08"
        iyy="0.00018279"
        iyz="2.423E-07"
        izz="0.00011103" />
    </inertial>
  </link>
  <joint
    name="laser_joint"
    type="fixed">
    <origin
      xyz="0 0 0.03172"
      rpy="0 0 0" />
    <parent
      link="base_footprint" />
    <child
      link="laser_frame" />
    <axis
      xyz="0 0 0" />
  </joint>
  <!-- END YDLIDAR -->

  <joint name="top_plate_body_frame_joint" type="fixed">
    <origin xyz=" 0.0 0.0 0.33 " rpy="0 0 0"/>
    <parent link="top_plate"/>
    <child link="body_frame"/>
  </joint>

  <link name="body_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.2 0.2 0.6"/>
      </geometry>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <box size="0.2 0.2 0.6"/>
      </geometry>
    </collision>
  </link>

  <gazebo reference="box_sensor_frame">
		<material>Gazebo/Black</material>
	</gazebo>

  <link name="box_sensor_frame">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.3 0.3 0.12"/>
      </geometry>
      <material
        name="boxBlack">
        <color
          rgba="0.0 0.0 0.0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <box size="0.3 0.3 0.125"/>
      </geometry>
    </collision>
  </link>

  <joint name="body_frame_box_sensor_frame_joint" type="fixed">
    <origin xyz=" 0.0 0.0 0.3 " rpy="0 0 0"/>
    <parent link="body_frame"/>
    <child link="box_sensor_frame"/>
  </joint>

  <!-- sonar -->
  <gazebo reference="sonar_fake">

    <material>Gazebo/Yellow</material>

    <sensor type="gpu_ray" name="head_front_sonar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>25</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>8</samples>
            <resolution>1</resolution>
            <min_angle>-1.570795</min_angle>
            <max_angle>1.570795</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>4.0</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_front_sonar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/RosAria/sonar</topicName>
        <frameName>sonar_fake</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- front_sonar -->
  <link name="sonar_fake">
    <inertial>
      <mass value="0.01" />
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0"
        iyy="0.001" iyz="0.0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>

  <joint name="sonar_to_sonar_fake" type="fixed">
    <origin rpy="0 0 0" xyz="-0.035 0.0 0.035" />
    <parent link="sonar" />
    <child link="sonar_fake" />
  </joint>

  <!-- IMU FOR RGBD ODOM -->
  <!-- <link name="imu_link">
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>

  <gazebo>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
        <alwaysOn>true</alwaysOn>
        <frameName>imu_link</frameName>
        <bodyName>base_link</bodyName>
        <topicName>/imu</topicName>
        <serviceName>imu_service</serviceName>
        <gaussianNoise>2.89e-08</gaussianNoise>
        <updateRate>20.0</updateRate>
      </plugin>
  </gazebo>

  <joint name="sonar_to_imu" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0.05" />
    <parent link="sonar" />
    <child link="imu_link" />
  </joint> -->

</robot>
