<launch>

  <!-- ydlidar -->
  <!--
  <include file="$(find ydlidar)/launch/lidar.launch">
  </include>
  -->

  <!--
  <node pkg="rosaria" type="Rosaria" name="Rosaria">
  </node>
  -->

  <!-- kinect -->
  <!--
  <include file="$(find freenect_launch)/launch/freenect.launch">
	<arg name="depth_registration" value="true"/>
  </include>
  -->

  <param name="robot_description" command="$(find xacro)/xacro.py '$(find vribot_description)/urdf/vribot.xacro'"/>

  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find vribot_description)/urdf/vribot.xacro'"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="rgbd_sync" args="standalone rtabmap_ros/rgbd_sync" output="screen">
    <remap from="rgb/image"       to="/camera/rgb/image_rect_color"/>
    <remap from="depth/image"     to="/camera/depth_registered/image_raw"/>
    <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
    <remap from="rgbd_image"      to="rgbd_image"/> <!-- output -->

    <!-- Should be true for not synchronized camera topics
         (e.g., false for kinectv2, zed, realsense, true for xtion, kinect360)-->
    <param name="approx_sync"       value="true"/>
  </node>

  <!-- Arguments -->
  <arg name="open_rviz" default="true"/>
  <arg name="rtabmapviz" default="true"/>
  <arg name="move_forward_only" default="false"/>

  <arg name="with_camera" default="true"/>
  <arg name="localization" default="false"/>
  <arg name="database_path" default="$(find vribot_navigation)/maps/rtabmap.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>



  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_args)">
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="base_link"/>

      <param name="subscribe_rgb"       type="bool"   value="false"/>
      <param name="subscribe_depth"     type="bool"   value="false"/>
      <param name="subscribe_rgbd"      type="bool"   value="true"/>

      <param name="subscribe_scan" type="bool" value="true"/>

      <!-- use actionlib to send goals to move_base -->
      <param name="use_action_for_goal" type="bool" value="true"/>
      <remap from="move_base"           to="/move_base"/>

      <!-- inputs -->
      <remap from="scan"            to="/scan"/>
      <remap from="odom"            to="/RosAria/pose"/>
      <remap from="rgbd_image"      to="/rgbd_image"/>


      <!-- output -->
      <remap from="grid_map"   to="/map"/>


      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"                 type="string" value="1"/>
      <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="GridGlobal/MinSize"           type="string" value="20"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
    </node>


    <!-- visualization with rtabmapviz -->

    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">

      <param name="database_path"       type="string" value="$(arg database_path)"/>

      <param name="subscribe_depth"  type="bool"   value="false"/>
      <param name="subscribe_rgbd"   type="bool"   value="true"/>
      <param name="subscribe_scan"   type="bool"   value="true"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="base_link"/>
      <param name="approx_sync"      type="bool"   value="true"/>

      <remap from="odom"            to="/RosAria/pose"/>
      <remap from="scan"            to="/scan"/>
      <remap from="rgbd_image"      to="/rgbd_image"/>
    </node>

  </group>

  <!-- move_base -->
  <include file="$(find vribot_navigation)/launch/move_base.launch">
  </include>

  <!-- pioneer_controller_spin_recover -->
  <include file="$(find pioneer_ros)/launch/pioneer_controller_spin_recover.launch">
  </include>

  <!-- rviz -->

  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find vribot_description)/launch/basic.rviz"/>
  </group>



</launch>
