TrajectoryPlannerROS:
  #1.2 meter real max but 0.3 for safety
  # max_vel_x: 0.3
  max_vel_x: 0.4
  max_vel_y: 0.0
  # min_vel_x: -0.1
  min_vel_x: -0.2
  min_vel_y: 0.0

  # Max. Forward/Backward Speed: 1.2 m/s
  # Robot Weight: 9 kg
  # Rotation Speed: 300Â°/s
  # max_vel_theta: 1.0
  max_vel_theta: 0.3
  min_vel_theta: -0.3
  # min_in_place_vel_theta: 0.2
  min_in_place_vel_theta: 0.0

  escape_vel: -0.2

  acc_lim_x: 0.5
  acc_lim_y: 0.0
  acc_lim_theta: 0.5

  holonomic_robot: false

  #default value in meters
  xy_goal_tolerance: 0.10
  # xy_goal_tolerance: 0.05

  #default value in rads
  # yaw_goal_tolerance: 0.05

  #28.6479 degree -> 0.5 rads
  #57.2958 degree -> 1.0 rads
  # yaw_goal_tolerance: 1.0

  #179.995 degree, basically does not care about final pose
  # yaw_goal_tolerance: 3.1415
  # yaw_goal_tolerance: 1.5
  yaw_goal_tolerance: 0.5

  # oscillation_reset_dist: 0.05
  oscillation_reset_dist: 0.025

  # sim_time: 2.0
  sim_time: 4.0
  sim_granularity: 0.025
  meter_scoring: true
  pdist_scale: 0.9
  gdist_scale: 0.6

  vx_samples: 20
  vy_samples: 0
  vth_samples: 40


  # By maximizing solely the clearance and the velocity, the robot would always travel into free space but there would be no incentive to move towards a goal location. By solely maximizing the target heading the robot quickly would get stopped by the first obstacle that blocks its way, unable to move around it.
  # path_distance_bias: 1.0
  # goal_distance_bias: 0.8
  # occdist_scale: 0.01

  path_distance_bias: 32.0
  goal_distance_bias: 20.0
  occdist_scale: 0.02
