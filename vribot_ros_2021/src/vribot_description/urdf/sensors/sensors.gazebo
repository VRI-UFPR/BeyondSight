<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="link_name" value="camera_link"/>
  <xacro:property name="camera_name" value="camera"/>
  <xacro:property name="frame_name" value="camera_rgb_frame"/>

  <!-- BEGIN KINECT -->
  <gazebo reference="${link_name}">
    <sensor name="${link_name}" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>4</far>
        </clip>
      </camera>
      <plugin name="${link_name}_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>vribot/${camera_name}_kinect</cameraName>
        <imageTopicName>${camera_name}/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>${camera_name}/rgb/camera_info</cameraInfoTopicName>
        <depthImageTopicName>${camera_name}/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>${camera_name}/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>${camera_name}/depth/points</pointCloudTopicName>
        <frameName>${frame_name}</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- END KINECT -->

  <!-- BEGIN YDLIDAR -->
  <gazebo reference="base_laser">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="laser_frame">
    <sensor type="gpu_ray" name="head_ydlidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>7</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.30</min>
          <max>16.0</max>
          <resolution>0.02</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser achieving "+-30mm" accuracy at range < 10m. A mean of 0.0m and stddev of 0.01m will put 99.7% of samples within 0.03m of the true reading. -->
          <mean>0.0</mean>
          <stddev>0.015</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>laser_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- END YDLIDAR -->

  <!-- BEGIN BODY_FRAME -->
  <gazebo reference="box_sensor_frame">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- END BODY_FRAME -->

  <!-- BEGIN SONAR -->
  <gazebo reference="sonar_fake">

    <material>Gazebo/Yellow</material>

    <sensor type="gpu_ray" name="head_front_sonar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>25</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>8</samples>
            <resolution>1</resolution>
            <min_angle>-1.570795</min_angle>
            <max_angle>1.570795</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>4.0</max>
          <resolution>0.1</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser achieving "+-30mm" accuracy at range < 10m. A mean of 0.0m and stddev of 0.01m will put 99.7% of samples within 0.03m of the true reading. -->
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_front_sonar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/RosAria/sonar</topicName>
        <frameName>sonar_fake</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- END SONAR -->

</robot>
